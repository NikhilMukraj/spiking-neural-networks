integer = @{ ASCII_DIGIT+ }
decimal = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* }
number = @{ decimal | integer }
name_characters = @{ 'a'..'z' | 'A'..'z' | "_" }

name = @{ name_characters ~ (name_characters | integer)* }

args = {
    (expr | function | name | number)? ~ (" "* ~ "," ~ " "* ~ (expr | function | name | number))* ~ ","?
}
function = { name ~ ("(" ~ args ~ ")") }

unary_minus = { "-" }
primary = _{ function | number | name | "(" ~ expr ~ ")" }

atom = _{ unary_minus? ~ primary }

bin_op = _{ add | subtract | multiply | divide | power }
	add = { "+" }
	subtract = { "-" }
	multiply = { "*" }
	divide = { "/" }
	power = { "^" }

expr = { atom ~ (bin_op ~ atom)* }

diff_eq_declaration = { "d" ~ name ~ "/dt" }
eq_declaration = { name }

func_declaration_args = { "(" ~ name ~ (" "* ~ "," ~ " "* ~ name)* ~ ","? ~ ")" }
func_declaration = { name ~ func_declaration_args }

equation = _{ SOI ~ ( func_declaration | diff_eq_declaration | eq_declaration ) ~ " "* ~ "=" ~ " "* ~ expr ~ EOI }

WHITESPACE = _{ " " }

// neuron block
// functions block (has any functions that )
// ion channel block
// neurotransmitter kinetics block
// receptor kinetics block

// neuron should include type of neuron (name of neuron)
// test code generation, and reading from file
// neuron should include list of necessary variables
// variables either all have defaults or none have defaults

// variables_block = _{ "vars:" ~ " "* ~ name ~ (" "* ~ "," ~ " "* ~ name)* ~ ","? }
// variables_with_default = _{ "vars:" ~ " "* ~ name ~ " "* ~ "=" ~ " "* ~ number ~ (" "* ~ "," ~ " "* ~ name ~ " "* ~ "=" ~ " "* ~ number)* ~ ","? }
// neuron_block = _{ SOI ~ "[neuron]\n" ~ "type:" ~ name ~ "\n" ~ (equation ~ "\n"+) * ~ equation? ~ "[end]" ~ EOI } 
